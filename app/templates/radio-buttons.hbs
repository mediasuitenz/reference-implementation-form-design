<h1>Boolean Radio Buttons</h1>
<br><br>
<p>A set of radio buttons when you want a boolean true/false or yes/no response.</p>
<p>
  <table>
    <tr>
      <th>Paramater</th>
      <th>Type</th>
      <th>Description</th>
    </tr>
    <tr><td>groupLabel</td><td>string</td><td>Label</td></tr>
    <tr><td>inlineGroupLabel</td><td>string</td><td>Inline label (dependent on styling - wraps in a span with a 'inline-group-label' class)</td></tr>
    <tr><td>options</td> <td>[object]</td><td>Object can have the keys: name, value, label, checked, disabled - exactly as the html attributes/properties</td></tr>
    <tr><td>disabled</td> <td>true, false(default)</td><td>Indicates whether the field is disabled</td></tr>
    <tr><td>class</td> <td>string</td><td>Element css classes</td></tr>
    <tr><td>errors</td> <td>[object]</td><td>Array of error objects.  Each object must contain a 'message' key to be displayed</td></tr>
    <tr><td>onChange</td> <td>function (value(any))</td><td>Function called when a radio-button is selected.  <b>Note: </b> function is called twice when the label is clicked rather
      than the radio-button.  Since it passes the same value in each time, this is rarely a problem.
    </td></tr>
  </table>
</p>

<h3>Valid</h3>
{{mediasuite-radio-buttons
  groupLabel="Select your favourite Gunter"
  options=model.options
  onChange=(route-action 'favouriteCharacterChanged')
}}

<pre>
  &#123;&#123;mediasuite-radio-buttons
    groupLabel="Select your favourite Gunter"
    options=model.options
    onChange=(route-action 'favouriteCharacterChanged')
  &#125;&#125;
</pre>

<br><br>

<h3>Invalid</h3>
{{mediasuite-radio-buttons
  groupLabel="Select your favourite Gunter"
  options=model.otheroptions
  errors=model.errors   
}}

<pre>
  &#123;&#123;mediasuite-radio-buttons
    groupLabel="Select your favourite Gunter"
    options=model.otheroptions
    errors=model.errors
  &#125;&#125;
</pre>

